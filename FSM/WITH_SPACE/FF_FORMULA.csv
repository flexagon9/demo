"FormulaName","EffectiveStartDate","EffectiveEndDate","LegislativeDataGroupName","FormulaTypeName","LegislationCode","ViewInstanceName","GroupingKey","LogicalStartDate","LogicalEndDate","BaseFormulaName","Compile","CompileFlag","EditStatus","EssCtxt","FormulaText","LegislationDiscriminator","ModuleId","FormulaName1","Description","FormulaId","FormulaTypeId","LegislativeDataGroupId"
"DB Pension Plan Percent EE Retroactive","1951/01/01","4712/12/31","CA Legislative Data Group","Oracle Payroll","","Formula","DB PENSION PLAN PERCENT EE_PRETAX_DEDN_CA_RETRO,Oracle Payroll,CA Legislative Data Group","1951/01/01","4712/12/31","DB PENSION PLAN PERCENT EE_PRETAX_DEDN_CA_RETRO ","","","T","","","CA","","DB Pension Plan Percent EE Retroactive","Formula for Canada Retroactive Pretax Deduction","","",""
